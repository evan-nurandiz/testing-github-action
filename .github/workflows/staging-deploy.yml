name: deploy staging
on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'dockerfile'

jobs:
  publish_images:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Prepare env variables
        id: vars
        run: |
          export COMMIT_DATE=$(LC_TIME="C" TZ="Asia/Jakarta" date +''%y.%m.%d-%H.%M'' --date="$(git show ${GITHUB_SHA} --format=%cd --date=iso | head -n 1)")
          export RELEASE_TAG=${GITHUB_SHA::8}-$COMMIT_DATE
          export COMMIT_MESSAGE=$(git log -1 --pretty=oneline --abbrev-commit --format="%B" | head -n 1 | sed "s/,/\\\,/g;")
          echo "CHANGE_CAUSE=${RELEASE_TAG} - ${COMMIT_MESSAGE}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV
  
      - name: build image
        run: |
          docker build . -t evannurandiz00/testing:${{ env.RELEASE_TAG }}

      - name: push image to docker hub
        run: |
          docker login -u evannurandiz00 -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push evannurandiz00/testing:${{ env.RELEASE_TAG }}
  
      - name: Create .env file on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cat > ~/docker-compose-app/.env << EOT
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOT

      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ~/docker-compose-app
            sudo docker-compose -f docker-compose-app.yml pull
            sudo docker stack config -c docker-compose-app.yml
            sudo docker stack deploy -c docker-compose-app.yml --with-registry-auth app_web
